name: Deploy API

on:
  push:
    branches: [ main ]
  workflow_dispatch:

concurrency:
  group: prod-deploy
  cancel-in-progress: true

jobs:
  deploy:
    runs-on: ubuntu-latest
    timeout-minutes: 20

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Build package
        run: git archive --format=tar.gz -o release.tgz HEAD

      # >>> NUEVO: escribir la llave en un archivo y normalizar saltos de línea
      - name: Write SSH key to file
        run: |
          echo "${{ secrets.SSH_KEY }}" > "$RUNNER_TEMP/ssh_key"
          sed -i 's/\r$//' "$RUNNER_TEMP/ssh_key"
          chmod 600 "$RUNNER_TEMP/ssh_key"

      # >>> NUEVO: ping SSH para verificar autenticación antes del scp
      - name: SSH ping
        run: |
          ssh -i "$RUNNER_TEMP/ssh_key" \
              -p "${{ secrets.SSH_PORT }}" \
              -o StrictHostKeyChecking=no \
              ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }} \
              'echo "SSH OK on $(hostname)"'

      - name: Upload to server
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          port: ${{ secrets.SSH_PORT }}
          # USAR key_path en lugar de key
          key_path: ${{ runner.temp }}/ssh_key
          source: "release.tgz"
          target: "/tmp"
          debug: true

      - name: Deploy on server
        uses: appleboy/ssh-action@v1.0.3
        env:
          APP_DIR: /opt/tomboy-api
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          port: ${{ secrets.SSH_PORT }}
          # USAR key_path aquí también
          key_path: ${{ runner.temp }}/ssh_key
          script: |
            set -e
            REL=/tmp/release.tgz
            APP_DIR=${APP_DIR:-/opt/tomboy-api}

            sudo install -d -o www-data -g www-data "$APP_DIR"
            sudo find "$APP_DIR" -mindepth 1 -maxdepth 1 ! -name '.venv' ! -name '.env' -exec rm -rf {} +

            sudo tar --no-same-owner -xzf "$REL" -C "$APP_DIR"

            if [ ! -d "$APP_DIR/.venv" ]; then
              sudo -u www-data python3 -m venv "$APP_DIR/.venv"
            fi
            sudo -u www-data bash -lc "
              . $APP_DIR/.venv/bin/activate &&
              python -m pip install -U pip wheel setuptools &&
              [ -f $APP_DIR/requirements.txt ] && pip install -r $APP_DIR/requirements.txt || true
            "
            sudo -u www-data bash -lc "
              . $APP_DIR/.venv/bin/activate &&
              python -m pip install 'uvicorn[standard]' fastapi
            "

            sudo systemctl restart tomboy-api
            sudo systemctl is-active tomboy-api

      - name: Smoke test
        run: curl -fsS https://api.breathandbravery.com/docs >/dev/null
